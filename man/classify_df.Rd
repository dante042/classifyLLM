% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classify_df.R
\name{classify_df}
\alias{classify_df}
\title{Classify text using categories provided in a data frame}
\usage{
classify_df(
  .data,
  text_col,
  categories,
  category_col = "category",
  description_col = "description",
  id_col = NULL,
  return_probs = FALSE,
  .progress = interactive(),
  ...
)
}
\arguments{
\item{.data}{A data.frame/tibble containing the text to classify.}

\item{text_col}{Column in \code{.data} with the text to classify (tidy-eval).}

\item{categories}{A data.frame/tibble of category definitions.}

\item{category_col}{Column name in \code{categories} holding category labels
(default \code{"category"}).}

\item{description_col}{Column name in \code{categories} with category descriptions
(default \code{"description"}). If missing/NULL, categories are passed without
descriptions.}

\item{id_col}{Optional column in \code{.data} to carry through as an identifier
(useful for joins/debugging).}

\item{return_probs}{Logical; if \code{TRUE}, returns a long-format table of
per-category probabilities joined back to \code{.data} (one row per text Ã—
category). If \code{FALSE} (default), only the top prediction and its score are
added.}

\item{.progress}{Logical; show a progress bar when classifying many rows.
Default: \code{interactive()}.}

\item{...}{Additional arguments forwarded to \code{\link[=classify_llm]{classify_llm()}} (e.g. \code{model},
\code{temperature}, \code{top_n}, \code{seed}, \code{system_prompt}, etc.).}
}
\value{
If \code{return_probs = FALSE} (default): \code{.data} with two new columns:
\itemize{
\item \code{.pred_category} (chr)
\item \code{.pred_score} (dbl; interpretation depends on the underlying model)
}

If \code{return_probs = TRUE}: a tibble with \code{.data} columns plus:
\itemize{
\item \code{.category} (chr)
\item \code{.prob} (dbl)
}
}
\description{
\code{classify_df()} is a thin wrapper around \code{\link[=classify_llm]{classify_llm()}} that accepts a
tidy table of categories (and optional descriptions) instead of separate
vectors. It appends the predicted category (and, optionally, probabilities)
to the input data.
}
\examples{
\dontrun{
library(dplyr)
texts <- tibble::tibble(id = 1:3,
  content = c(
    "Food distribution in border camp delayed by insecurity.",
    "Price inflation accelerates in host communities.",
    "Asylum application processing times decrease.")
)

cats <- tibble::tribble(
  ~category,       ~description,
  "Protection",    "Risks, incidents, access to territory/asylum, GBV/CP",
  "Basic Needs",   "Shelter, food, WASH, core relief items",
  "Livelihoods",   "Jobs, income, markets, prices",
  "Procedures",    "RSD, documentation, processing, status"
)

# Top prediction per row
texts |> classify_df(content, categories = cats, model = "gpt-4o-mini")

# Full probability table
texts |> classify_df(content, categories = cats, return_probs = TRUE)
}

}
